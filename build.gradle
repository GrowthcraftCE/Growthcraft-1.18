buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://maven.minecraftforge.net' }
       // maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
      //  classpath 'org.parchmentmc:librarian:1.+'
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
    id "org.sonarqube" version "3.4.0.2513"
}

apply plugin: 'net.minecraftforge.gradle'
//apply plugin: 'org.parchmentmc.librarian.forgegradle'

version = "${minecraft_version}-${growthcraft_version}"
group = 'growthcraft'
archivesBaseName = 'growthcraft'

sonarqube {
    properties {
        property "sonar.projectKey", "Growthcraft-1.18"
        property "sonar.organization", "growthcraftce"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('========================================')
println('Java: ' + System.getProperty('java.version'))
println(' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ')')
println('Arch: ' + System.getProperty('os.arch'))
println("Build Version: ${growthcraft_version}")
println('----------------------------------------')

minecraft {
    // Mappings
    mappings channel: 'official', version: "${minecraft_version}"
    // Access Transformers, this is a fixed path.
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') // Currently, this location cannot be changed from the default.

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                growthcraft {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                growthcraft { source sourceSets.main }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'growthcraft'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                growthcraft {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            args '--flat', '--all', 'validate',
                    '--mod', 'growthcraft',
                    '--output', file('src/generated/resources/'),
                    '--existing', file('src/main/resources/')

            mods {
                growthcraft { source sourceSets.main }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

/**
 * Project Dependent Repositories
 * ForgeGradle automatically adds the Forge maven and Maven Central for you
 */
repositories {
    // Curse Forge
    maven { url "https://www.cursemaven.com" }
    maven { //JEI
		name = "Jared's maven"
		url = "https://maven.blamejared.com/"
 	}
}

dependencies {
    minecraft "net.minecraftforge:forge:${forge_version}"
    
    // compile against the JEI API but do not include it at runtime
    //compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}:api")
    compileOnly(fg.deobf("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}"))
  	compileOnly(fg.deobf("mezz.jei:jei-${minecraft_version}-forge-api:${jei_version}"))
    
    // Runtime mods for testing
    runtimeOnly fg.deobf("curse.maven:theoneprobe-${curseforge_theoneprobe}")
    runtimeOnly fg.deobf("curse.maven:jei-${curseforge_jei}")
    runtimeOnly fg.deobf("curse.maven:patchouli-${curseforge_patchouli}")
    runtimeOnly fg.deobf("curse.maven:appleskin-${curseforge_appleskin}")
    
    runtimeOnly fg.deobf("curse.maven:farmers_delight-${curseforge_farmers_delight}")
}

jar {
    manifest {
        attributes([
            "Specification-Title": "growthcraft",
            "Specification-Vendor": "growthcraft",
            "Specification-Version": "7",
            "Implementation-Title": project.name,
            "Implementation-Version": "${growthcraft_version}",
            "Implementation-Vendor" :"growthcraft",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish plugin
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
// publish.dependsOn('reobfJar')

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'src'
}

task deobjJar(type: Jar) {
    from sourceSets.main.output
    classifier 'deobf'
}

artifacts {
    archives sourcesJar, deobjJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}
